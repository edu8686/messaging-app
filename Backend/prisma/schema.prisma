// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  name     String
  username String  @unique
  password String
  isOnline Boolean @default(false)

  chats    Chat[]    @relation("ChatUsers")
  messages Message[]
  profile  Profile?
}

model Profile {
  id        Int     @id @default(autoincrement())
  userId    Int     @unique
  name      String
  lastName  String?
  about     String?
  location  String?
  latitude  Float?
  longitude Float?
  hobbies   String[]
  avatarUrl String?
  user      User    @relation(fields: [userId], references: [id])
}



model Chat {
  id          Int      @id @default(autoincrement())
  name        String?
  description String   @default("")
  isGroup     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  users    User[]    @relation("ChatUsers")
  messages Message[]
}

enum MessageType {
  TEXT
  IMAGE
}

model Message {
  id        Int         @id @default(autoincrement())
  type      MessageType @default(TEXT)
  text      String? // usado si es texto o si acompa침a a la imagen
  createdAt DateTime    @default(now())

  chatId Int
  chat   Chat @relation(fields: [chatId], references: [id], onDelete: Cascade)

  senderId Int
  sender   User @relation(fields: [senderId], references: [id])

  // Relaci칩n opcional con imagen
  image Image?
}

model Image {
  id       Int    @id @default(autoincrement())
  name     String
  url      String // d칩nde est치 guardada la imagen (ej: S3, carpeta uploads, etc.)
  mimeType String // ej: "image/png", "image/jpeg"
  size     Int? // en bytes
  width    Int? // px
  height   Int? // px

  messageId Int     @unique
  message   Message @relation(fields: [messageId], references: [id], onDelete: Cascade)
}
