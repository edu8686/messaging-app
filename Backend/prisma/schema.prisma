generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  name     String
  username String    @unique
  password String
  isOnline Boolean   @default(false)
  messages Message[]
  profile  Profile?
  chats    Chat[]    @relation("ChatUsers")
}

model Profile {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique
  name      String
  lastName  String?
  about     String?
  location  String?
  avatarUrl String?
  latitude  Float?
  longitude Float?
  hobbies   String[]
  user      User     @relation(fields: [userId], references: [id])
}

model Chat {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  isGroup     Boolean   @default(false)
  name        String?
  description String    @default("")
  messages    Message[]
  users       User[]    @relation("ChatUsers")
}

model Message {
  id        Int         @id @default(autoincrement())
  text      String?
  createdAt DateTime    @default(now())
  chatId    Int
  senderId  Int
  type      MessageType @default(TEXT)
  image     Image?
  chat      Chat        @relation(fields: [chatId], references: [id], onDelete: Cascade)
  sender    User        @relation(fields: [senderId], references: [id])
}

model Image {
  id        Int     @id @default(autoincrement())
  url       String
  mimeType  String
  size      Int?
  width     Int?
  height    Int?
  messageId Int     @unique
  name      String
  message   Message @relation(fields: [messageId], references: [id], onDelete: Cascade)
}

enum MessageType {
  TEXT
  IMAGE
}
